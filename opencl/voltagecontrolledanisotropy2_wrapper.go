package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for addvoltagecontrolledanisotropy2 kernel invocation
type addvoltagecontrolledanisotropy2_args_t struct {
	arg_Bx            unsafe.Pointer
	arg_By            unsafe.Pointer
	arg_Bz            unsafe.Pointer
	arg_mx            unsafe.Pointer
	arg_my            unsafe.Pointer
	arg_mz            unsafe.Pointer
	arg_Ms_           unsafe.Pointer
	arg_Ms_mul        float32
	arg_vcmaCoeff_    unsafe.Pointer
	arg_vcmaCoeff_mul float32
	arg_voltage_      unsafe.Pointer
	arg_voltage_mul   float32
	arg_ux_           unsafe.Pointer
	arg_ux_mul        float32
	arg_uy_           unsafe.Pointer
	arg_uy_mul        float32
	arg_uz_           unsafe.Pointer
	arg_uz_mul        float32
	arg_N             int
	argptr            [19]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addvoltagecontrolledanisotropy2 kernel invocation
var addvoltagecontrolledanisotropy2_args addvoltagecontrolledanisotropy2_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	addvoltagecontrolledanisotropy2_args.argptr[0] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_Bx)
	addvoltagecontrolledanisotropy2_args.argptr[1] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_By)
	addvoltagecontrolledanisotropy2_args.argptr[2] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_Bz)
	addvoltagecontrolledanisotropy2_args.argptr[3] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_mx)
	addvoltagecontrolledanisotropy2_args.argptr[4] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_my)
	addvoltagecontrolledanisotropy2_args.argptr[5] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_mz)
	addvoltagecontrolledanisotropy2_args.argptr[6] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_Ms_)
	addvoltagecontrolledanisotropy2_args.argptr[7] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_Ms_mul)
	addvoltagecontrolledanisotropy2_args.argptr[8] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_vcmaCoeff_)
	addvoltagecontrolledanisotropy2_args.argptr[9] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_vcmaCoeff_mul)
	addvoltagecontrolledanisotropy2_args.argptr[10] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_voltage_)
	addvoltagecontrolledanisotropy2_args.argptr[11] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_voltage_mul)
	addvoltagecontrolledanisotropy2_args.argptr[12] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_ux_)
	addvoltagecontrolledanisotropy2_args.argptr[13] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_ux_mul)
	addvoltagecontrolledanisotropy2_args.argptr[14] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_uy_)
	addvoltagecontrolledanisotropy2_args.argptr[15] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_uy_mul)
	addvoltagecontrolledanisotropy2_args.argptr[16] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_uz_)
	addvoltagecontrolledanisotropy2_args.argptr[17] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_uz_mul)
	addvoltagecontrolledanisotropy2_args.argptr[18] = unsafe.Pointer(&addvoltagecontrolledanisotropy2_args.arg_N)
}

// Wrapper for addvoltagecontrolledanisotropy2 OpenCL kernel, asynchronous.
func k_addvoltagecontrolledanisotropy2_async(Bx unsafe.Pointer, By unsafe.Pointer, Bz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Ms_ unsafe.Pointer, Ms_mul float32, vcmaCoeff_ unsafe.Pointer, vcmaCoeff_mul float32, voltage_ unsafe.Pointer, voltage_mul float32, ux_ unsafe.Pointer, ux_mul float32, uy_ unsafe.Pointer, uy_mul float32, uz_ unsafe.Pointer, uz_mul float32, N int, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("addvoltagecontrolledanisotropy2")
	}

	addvoltagecontrolledanisotropy2_args.Lock()
	defer addvoltagecontrolledanisotropy2_args.Unlock()

	addvoltagecontrolledanisotropy2_args.arg_Bx = Bx
	addvoltagecontrolledanisotropy2_args.arg_By = By
	addvoltagecontrolledanisotropy2_args.arg_Bz = Bz
	addvoltagecontrolledanisotropy2_args.arg_mx = mx
	addvoltagecontrolledanisotropy2_args.arg_my = my
	addvoltagecontrolledanisotropy2_args.arg_mz = mz
	addvoltagecontrolledanisotropy2_args.arg_Ms_ = Ms_
	addvoltagecontrolledanisotropy2_args.arg_Ms_mul = Ms_mul
	addvoltagecontrolledanisotropy2_args.arg_vcmaCoeff_ = vcmaCoeff_
	addvoltagecontrolledanisotropy2_args.arg_vcmaCoeff_mul = vcmaCoeff_mul
	addvoltagecontrolledanisotropy2_args.arg_voltage_ = voltage_
	addvoltagecontrolledanisotropy2_args.arg_voltage_mul = voltage_mul
	addvoltagecontrolledanisotropy2_args.arg_ux_ = ux_
	addvoltagecontrolledanisotropy2_args.arg_ux_mul = ux_mul
	addvoltagecontrolledanisotropy2_args.arg_uy_ = uy_
	addvoltagecontrolledanisotropy2_args.arg_uy_mul = uy_mul
	addvoltagecontrolledanisotropy2_args.arg_uz_ = uz_
	addvoltagecontrolledanisotropy2_args.arg_uz_mul = uz_mul
	addvoltagecontrolledanisotropy2_args.arg_N = N

	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 0, Bx)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 1, By)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 2, Bz)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 3, mx)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 4, my)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 5, mz)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 6, Ms_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 7, Ms_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 8, vcmaCoeff_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 9, vcmaCoeff_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 10, voltage_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 11, voltage_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 12, ux_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 13, ux_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 14, uy_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 15, uy_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 16, uz_)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 17, uz_mul)
	SetKernelArgWrapper("addvoltagecontrolledanisotropy2", 18, N)

	//	args := addvoltagecontrolledanisotropy2_args.argptr[:]
	event := LaunchKernel("addvoltagecontrolledanisotropy2", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("addvoltagecontrolledanisotropy2")
	}

	return event
}
