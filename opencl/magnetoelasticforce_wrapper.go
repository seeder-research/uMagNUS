package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for getmagnetoelasticforce kernel invocation
type getmagnetoelasticforce_args_t struct {
	arg_fx     unsafe.Pointer
	arg_fy     unsafe.Pointer
	arg_fz     unsafe.Pointer
	arg_mx     unsafe.Pointer
	arg_my     unsafe.Pointer
	arg_mz     unsafe.Pointer
	arg_B1_    unsafe.Pointer
	arg_B1_mul float32
	arg_B2_    unsafe.Pointer
	arg_B2_mul float32
	arg_rcsx   float32
	arg_rcsy   float32
	arg_rcsz   float32
	arg_Nx     int
	arg_Ny     int
	arg_Nz     int
	arg_PBC    uint8
	argptr     [17]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for getmagnetoelasticforce kernel invocation
var getmagnetoelasticforce_args getmagnetoelasticforce_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	getmagnetoelasticforce_args.argptr[0] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_fx)
	getmagnetoelasticforce_args.argptr[1] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_fy)
	getmagnetoelasticforce_args.argptr[2] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_fz)
	getmagnetoelasticforce_args.argptr[3] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_mx)
	getmagnetoelasticforce_args.argptr[4] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_my)
	getmagnetoelasticforce_args.argptr[5] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_mz)
	getmagnetoelasticforce_args.argptr[6] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_B1_)
	getmagnetoelasticforce_args.argptr[7] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_B1_mul)
	getmagnetoelasticforce_args.argptr[8] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_B2_)
	getmagnetoelasticforce_args.argptr[9] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_B2_mul)
	getmagnetoelasticforce_args.argptr[10] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_rcsx)
	getmagnetoelasticforce_args.argptr[11] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_rcsy)
	getmagnetoelasticforce_args.argptr[12] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_rcsz)
	getmagnetoelasticforce_args.argptr[13] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_Nx)
	getmagnetoelasticforce_args.argptr[14] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_Ny)
	getmagnetoelasticforce_args.argptr[15] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_Nz)
	getmagnetoelasticforce_args.argptr[16] = unsafe.Pointer(&getmagnetoelasticforce_args.arg_PBC)
}

// Wrapper for getmagnetoelasticforce OpenCL kernel, asynchronous.
func k_getmagnetoelasticforce_async(fx unsafe.Pointer, fy unsafe.Pointer, fz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, B1_ unsafe.Pointer, B1_mul float32, B2_ unsafe.Pointer, B2_mul float32, rcsx float32, rcsy float32, rcsz float32, Nx int, Ny int, Nz int, PBC uint8, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("getmagnetoelasticforce")
	}

	getmagnetoelasticforce_args.Lock()
	defer getmagnetoelasticforce_args.Unlock()

	getmagnetoelasticforce_args.arg_fx = fx
	getmagnetoelasticforce_args.arg_fy = fy
	getmagnetoelasticforce_args.arg_fz = fz
	getmagnetoelasticforce_args.arg_mx = mx
	getmagnetoelasticforce_args.arg_my = my
	getmagnetoelasticforce_args.arg_mz = mz
	getmagnetoelasticforce_args.arg_B1_ = B1_
	getmagnetoelasticforce_args.arg_B1_mul = B1_mul
	getmagnetoelasticforce_args.arg_B2_ = B2_
	getmagnetoelasticforce_args.arg_B2_mul = B2_mul
	getmagnetoelasticforce_args.arg_rcsx = rcsx
	getmagnetoelasticforce_args.arg_rcsy = rcsy
	getmagnetoelasticforce_args.arg_rcsz = rcsz
	getmagnetoelasticforce_args.arg_Nx = Nx
	getmagnetoelasticforce_args.arg_Ny = Ny
	getmagnetoelasticforce_args.arg_Nz = Nz
	getmagnetoelasticforce_args.arg_PBC = PBC

	SetKernelArgWrapper("getmagnetoelasticforce", 0, fx)
	SetKernelArgWrapper("getmagnetoelasticforce", 1, fy)
	SetKernelArgWrapper("getmagnetoelasticforce", 2, fz)
	SetKernelArgWrapper("getmagnetoelasticforce", 3, mx)
	SetKernelArgWrapper("getmagnetoelasticforce", 4, my)
	SetKernelArgWrapper("getmagnetoelasticforce", 5, mz)
	SetKernelArgWrapper("getmagnetoelasticforce", 6, B1_)
	SetKernelArgWrapper("getmagnetoelasticforce", 7, B1_mul)
	SetKernelArgWrapper("getmagnetoelasticforce", 8, B2_)
	SetKernelArgWrapper("getmagnetoelasticforce", 9, B2_mul)
	SetKernelArgWrapper("getmagnetoelasticforce", 10, rcsx)
	SetKernelArgWrapper("getmagnetoelasticforce", 11, rcsy)
	SetKernelArgWrapper("getmagnetoelasticforce", 12, rcsz)
	SetKernelArgWrapper("getmagnetoelasticforce", 13, Nx)
	SetKernelArgWrapper("getmagnetoelasticforce", 14, Ny)
	SetKernelArgWrapper("getmagnetoelasticforce", 15, Nz)
	SetKernelArgWrapper("getmagnetoelasticforce", 16, PBC)

	//	args := getmagnetoelasticforce_args.argptr[:]
	event := LaunchKernel("getmagnetoelasticforce", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("getmagnetoelasticforce")
	}

	return event
}
