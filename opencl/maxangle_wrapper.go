package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for setmaxangle kernel invocation
type setmaxangle_args_t struct {
	arg_dst     unsafe.Pointer
	arg_mx      unsafe.Pointer
	arg_my      unsafe.Pointer
	arg_mz      unsafe.Pointer
	arg_aLUT2d  unsafe.Pointer
	arg_regions unsafe.Pointer
	arg_Nx      int
	arg_Ny      int
	arg_Nz      int
	arg_PBC     uint8
	argptr      [10]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for setmaxangle kernel invocation
var setmaxangle_args setmaxangle_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	setmaxangle_args.argptr[0] = unsafe.Pointer(&setmaxangle_args.arg_dst)
	setmaxangle_args.argptr[1] = unsafe.Pointer(&setmaxangle_args.arg_mx)
	setmaxangle_args.argptr[2] = unsafe.Pointer(&setmaxangle_args.arg_my)
	setmaxangle_args.argptr[3] = unsafe.Pointer(&setmaxangle_args.arg_mz)
	setmaxangle_args.argptr[4] = unsafe.Pointer(&setmaxangle_args.arg_aLUT2d)
	setmaxangle_args.argptr[5] = unsafe.Pointer(&setmaxangle_args.arg_regions)
	setmaxangle_args.argptr[6] = unsafe.Pointer(&setmaxangle_args.arg_Nx)
	setmaxangle_args.argptr[7] = unsafe.Pointer(&setmaxangle_args.arg_Ny)
	setmaxangle_args.argptr[8] = unsafe.Pointer(&setmaxangle_args.arg_Nz)
	setmaxangle_args.argptr[9] = unsafe.Pointer(&setmaxangle_args.arg_PBC)
}

// Wrapper for setmaxangle OpenCL kernel, asynchronous.
func k_setmaxangle_async(dst unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, aLUT2d unsafe.Pointer, regions unsafe.Pointer, Nx int, Ny int, Nz int, PBC uint8, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("setmaxangle")
	}

	setmaxangle_args.Lock()
	defer setmaxangle_args.Unlock()

	setmaxangle_args.arg_dst = dst
	setmaxangle_args.arg_mx = mx
	setmaxangle_args.arg_my = my
	setmaxangle_args.arg_mz = mz
	setmaxangle_args.arg_aLUT2d = aLUT2d
	setmaxangle_args.arg_regions = regions
	setmaxangle_args.arg_Nx = Nx
	setmaxangle_args.arg_Ny = Ny
	setmaxangle_args.arg_Nz = Nz
	setmaxangle_args.arg_PBC = PBC

	SetKernelArgWrapper("setmaxangle", 0, dst)
	SetKernelArgWrapper("setmaxangle", 1, mx)
	SetKernelArgWrapper("setmaxangle", 2, my)
	SetKernelArgWrapper("setmaxangle", 3, mz)
	SetKernelArgWrapper("setmaxangle", 4, aLUT2d)
	SetKernelArgWrapper("setmaxangle", 5, regions)
	SetKernelArgWrapper("setmaxangle", 6, Nx)
	SetKernelArgWrapper("setmaxangle", 7, Ny)
	SetKernelArgWrapper("setmaxangle", 8, Nz)
	SetKernelArgWrapper("setmaxangle", 9, PBC)

	//	args := setmaxangle_args.argptr[:]
	event := LaunchKernel("setmaxangle", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("setmaxangle")
	}

	return event
}
