package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for pointwise_div kernel invocation
type pointwise_div_args_t struct {
	arg_dst unsafe.Pointer
	arg_a   unsafe.Pointer
	arg_b   unsafe.Pointer
	arg_N   int
	argptr  [4]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for pointwise_div kernel invocation
var pointwise_div_args pointwise_div_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	pointwise_div_args.argptr[0] = unsafe.Pointer(&pointwise_div_args.arg_dst)
	pointwise_div_args.argptr[1] = unsafe.Pointer(&pointwise_div_args.arg_a)
	pointwise_div_args.argptr[2] = unsafe.Pointer(&pointwise_div_args.arg_b)
	pointwise_div_args.argptr[3] = unsafe.Pointer(&pointwise_div_args.arg_N)
}

// Wrapper for pointwise_div OpenCL kernel, asynchronous.
func k_pointwise_div_async(dst unsafe.Pointer, a unsafe.Pointer, b unsafe.Pointer, N int, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("pointwise_div")
	}

	pointwise_div_args.Lock()
	defer pointwise_div_args.Unlock()

	pointwise_div_args.arg_dst = dst
	pointwise_div_args.arg_a = a
	pointwise_div_args.arg_b = b
	pointwise_div_args.arg_N = N

	SetKernelArgWrapper("pointwise_div", 0, dst)
	SetKernelArgWrapper("pointwise_div", 1, a)
	SetKernelArgWrapper("pointwise_div", 2, b)
	SetKernelArgWrapper("pointwise_div", 3, N)

	//	args := pointwise_div_args.argptr[:]
	event := LaunchKernel("pointwise_div", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("pointwise_div")
	}

	return event
}
