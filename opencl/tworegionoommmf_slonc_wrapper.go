package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for addtworegionoommfslonczewskitorque kernel invocation
type addtworegionoommfslonczewskitorque_args_t struct {
	arg_tx            unsafe.Pointer
	arg_ty            unsafe.Pointer
	arg_tz            unsafe.Pointer
	arg_mx            unsafe.Pointer
	arg_my            unsafe.Pointer
	arg_mz            unsafe.Pointer
	arg_Ms_           unsafe.Pointer
	arg_Ms_mul        float32
	arg_regions       unsafe.Pointer
	arg_regionA       uint8
	arg_regionB       uint8
	arg_strideX       int
	arg_strideY       int
	arg_strideZ       int
	arg_Nx            int
	arg_Ny            int
	arg_Nz            int
	arg_j_            float32
	arg_alpha_        float32
	arg_pfix_         float32
	arg_pfree_        float32
	arg_lambdafix_    float32
	arg_lambdafree_   float32
	arg_epsilonPrime_ float32
	arg_flt_          float32
	argptr            [25]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addtworegionoommfslonczewskitorque kernel invocation
var addtworegionoommfslonczewskitorque_args addtworegionoommfslonczewskitorque_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	addtworegionoommfslonczewskitorque_args.argptr[0] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_tx)
	addtworegionoommfslonczewskitorque_args.argptr[1] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_ty)
	addtworegionoommfslonczewskitorque_args.argptr[2] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_tz)
	addtworegionoommfslonczewskitorque_args.argptr[3] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_mx)
	addtworegionoommfslonczewskitorque_args.argptr[4] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_my)
	addtworegionoommfslonczewskitorque_args.argptr[5] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_mz)
	addtworegionoommfslonczewskitorque_args.argptr[6] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_Ms_)
	addtworegionoommfslonczewskitorque_args.argptr[7] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_Ms_mul)
	addtworegionoommfslonczewskitorque_args.argptr[8] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_regions)
	addtworegionoommfslonczewskitorque_args.argptr[9] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_regionA)
	addtworegionoommfslonczewskitorque_args.argptr[10] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_regionB)
	addtworegionoommfslonczewskitorque_args.argptr[11] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_strideX)
	addtworegionoommfslonczewskitorque_args.argptr[12] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_strideY)
	addtworegionoommfslonczewskitorque_args.argptr[13] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_strideZ)
	addtworegionoommfslonczewskitorque_args.argptr[14] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_Nx)
	addtworegionoommfslonczewskitorque_args.argptr[15] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_Ny)
	addtworegionoommfslonczewskitorque_args.argptr[16] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_Nz)
	addtworegionoommfslonczewskitorque_args.argptr[17] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_j_)
	addtworegionoommfslonczewskitorque_args.argptr[18] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_alpha_)
	addtworegionoommfslonczewskitorque_args.argptr[19] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_pfix_)
	addtworegionoommfslonczewskitorque_args.argptr[20] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_pfree_)
	addtworegionoommfslonczewskitorque_args.argptr[21] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_lambdafix_)
	addtworegionoommfslonczewskitorque_args.argptr[22] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_lambdafree_)
	addtworegionoommfslonczewskitorque_args.argptr[23] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_epsilonPrime_)
	addtworegionoommfslonczewskitorque_args.argptr[24] = unsafe.Pointer(&addtworegionoommfslonczewskitorque_args.arg_flt_)
}

// Wrapper for addtworegionoommfslonczewskitorque OpenCL kernel, asynchronous.
func k_addtworegionoommfslonczewskitorque_async(tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Ms_ unsafe.Pointer, Ms_mul float32, regions unsafe.Pointer, regionA uint8, regionB uint8, strideX int, strideY int, strideZ int, Nx int, Ny int, Nz int, j_ float32, alpha_ float32, pfix_ float32, pfree_ float32, lambdafix_ float32, lambdafree_ float32, epsilonPrime_ float32, flt_ float32, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("addtworegionoommfslonczewskitorque")
	}

	addtworegionoommfslonczewskitorque_args.Lock()
	defer addtworegionoommfslonczewskitorque_args.Unlock()

	addtworegionoommfslonczewskitorque_args.arg_tx = tx
	addtworegionoommfslonczewskitorque_args.arg_ty = ty
	addtworegionoommfslonczewskitorque_args.arg_tz = tz
	addtworegionoommfslonczewskitorque_args.arg_mx = mx
	addtworegionoommfslonczewskitorque_args.arg_my = my
	addtworegionoommfslonczewskitorque_args.arg_mz = mz
	addtworegionoommfslonczewskitorque_args.arg_Ms_ = Ms_
	addtworegionoommfslonczewskitorque_args.arg_Ms_mul = Ms_mul
	addtworegionoommfslonczewskitorque_args.arg_regions = regions
	addtworegionoommfslonczewskitorque_args.arg_regionA = regionA
	addtworegionoommfslonczewskitorque_args.arg_regionB = regionB
	addtworegionoommfslonczewskitorque_args.arg_strideX = strideX
	addtworegionoommfslonczewskitorque_args.arg_strideY = strideY
	addtworegionoommfslonczewskitorque_args.arg_strideZ = strideZ
	addtworegionoommfslonczewskitorque_args.arg_Nx = Nx
	addtworegionoommfslonczewskitorque_args.arg_Ny = Ny
	addtworegionoommfslonczewskitorque_args.arg_Nz = Nz
	addtworegionoommfslonczewskitorque_args.arg_j_ = j_
	addtworegionoommfslonczewskitorque_args.arg_alpha_ = alpha_
	addtworegionoommfslonczewskitorque_args.arg_pfix_ = pfix_
	addtworegionoommfslonczewskitorque_args.arg_pfree_ = pfree_
	addtworegionoommfslonczewskitorque_args.arg_lambdafix_ = lambdafix_
	addtworegionoommfslonczewskitorque_args.arg_lambdafree_ = lambdafree_
	addtworegionoommfslonczewskitorque_args.arg_epsilonPrime_ = epsilonPrime_
	addtworegionoommfslonczewskitorque_args.arg_flt_ = flt_

	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 0, tx)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 1, ty)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 2, tz)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 3, mx)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 4, my)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 5, mz)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 6, Ms_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 7, Ms_mul)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 8, regions)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 9, regionA)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 10, regionB)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 11, strideX)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 12, strideY)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 13, strideZ)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 14, Nx)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 15, Ny)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 16, Nz)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 17, j_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 18, alpha_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 19, pfix_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 20, pfree_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 21, lambdafix_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 22, lambdafree_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 23, epsilonPrime_)
	SetKernelArgWrapper("addtworegionoommfslonczewskitorque", 24, flt_)

	//	args := addtworegionoommfslonczewskitorque_args.argptr[:]
	event := LaunchKernel("addtworegionoommfslonczewskitorque", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("addtworegionoommfslonczewskitorque")
	}

	return event
}
