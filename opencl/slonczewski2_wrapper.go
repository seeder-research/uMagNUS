package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for addslonczewskitorque2 kernel invocation
type addslonczewskitorque2_args_t struct {
	arg_tx                unsafe.Pointer
	arg_ty                unsafe.Pointer
	arg_tz                unsafe.Pointer
	arg_mx                unsafe.Pointer
	arg_my                unsafe.Pointer
	arg_mz                unsafe.Pointer
	arg_Ms_               unsafe.Pointer
	arg_Ms_mul            float32
	arg_jz_               unsafe.Pointer
	arg_jz_mul            float32
	arg_px_               unsafe.Pointer
	arg_px_mul            float32
	arg_py_               unsafe.Pointer
	arg_py_mul            float32
	arg_pz_               unsafe.Pointer
	arg_pz_mul            float32
	arg_alpha_            unsafe.Pointer
	arg_alpha_mul         float32
	arg_pol_              unsafe.Pointer
	arg_pol_mul           float32
	arg_lambda_           unsafe.Pointer
	arg_lambda_mul        float32
	arg_epsPrime_         unsafe.Pointer
	arg_epsPrime_mul      float32
	arg_thickness_        unsafe.Pointer
	arg_thickness_mul     float32
	arg_meshThickness     float32
	arg_freeLayerPosition float32
	arg_N                 int
	argptr                [29]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addslonczewskitorque2 kernel invocation
var addslonczewskitorque2_args addslonczewskitorque2_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	addslonczewskitorque2_args.argptr[0] = unsafe.Pointer(&addslonczewskitorque2_args.arg_tx)
	addslonczewskitorque2_args.argptr[1] = unsafe.Pointer(&addslonczewskitorque2_args.arg_ty)
	addslonczewskitorque2_args.argptr[2] = unsafe.Pointer(&addslonczewskitorque2_args.arg_tz)
	addslonczewskitorque2_args.argptr[3] = unsafe.Pointer(&addslonczewskitorque2_args.arg_mx)
	addslonczewskitorque2_args.argptr[4] = unsafe.Pointer(&addslonczewskitorque2_args.arg_my)
	addslonczewskitorque2_args.argptr[5] = unsafe.Pointer(&addslonczewskitorque2_args.arg_mz)
	addslonczewskitorque2_args.argptr[6] = unsafe.Pointer(&addslonczewskitorque2_args.arg_Ms_)
	addslonczewskitorque2_args.argptr[7] = unsafe.Pointer(&addslonczewskitorque2_args.arg_Ms_mul)
	addslonczewskitorque2_args.argptr[8] = unsafe.Pointer(&addslonczewskitorque2_args.arg_jz_)
	addslonczewskitorque2_args.argptr[9] = unsafe.Pointer(&addslonczewskitorque2_args.arg_jz_mul)
	addslonczewskitorque2_args.argptr[10] = unsafe.Pointer(&addslonczewskitorque2_args.arg_px_)
	addslonczewskitorque2_args.argptr[11] = unsafe.Pointer(&addslonczewskitorque2_args.arg_px_mul)
	addslonczewskitorque2_args.argptr[12] = unsafe.Pointer(&addslonczewskitorque2_args.arg_py_)
	addslonczewskitorque2_args.argptr[13] = unsafe.Pointer(&addslonczewskitorque2_args.arg_py_mul)
	addslonczewskitorque2_args.argptr[14] = unsafe.Pointer(&addslonczewskitorque2_args.arg_pz_)
	addslonczewskitorque2_args.argptr[15] = unsafe.Pointer(&addslonczewskitorque2_args.arg_pz_mul)
	addslonczewskitorque2_args.argptr[16] = unsafe.Pointer(&addslonczewskitorque2_args.arg_alpha_)
	addslonczewskitorque2_args.argptr[17] = unsafe.Pointer(&addslonczewskitorque2_args.arg_alpha_mul)
	addslonczewskitorque2_args.argptr[18] = unsafe.Pointer(&addslonczewskitorque2_args.arg_pol_)
	addslonczewskitorque2_args.argptr[19] = unsafe.Pointer(&addslonczewskitorque2_args.arg_pol_mul)
	addslonczewskitorque2_args.argptr[20] = unsafe.Pointer(&addslonczewskitorque2_args.arg_lambda_)
	addslonczewskitorque2_args.argptr[21] = unsafe.Pointer(&addslonczewskitorque2_args.arg_lambda_mul)
	addslonczewskitorque2_args.argptr[22] = unsafe.Pointer(&addslonczewskitorque2_args.arg_epsPrime_)
	addslonczewskitorque2_args.argptr[23] = unsafe.Pointer(&addslonczewskitorque2_args.arg_epsPrime_mul)
	addslonczewskitorque2_args.argptr[24] = unsafe.Pointer(&addslonczewskitorque2_args.arg_thickness_)
	addslonczewskitorque2_args.argptr[25] = unsafe.Pointer(&addslonczewskitorque2_args.arg_thickness_mul)
	addslonczewskitorque2_args.argptr[26] = unsafe.Pointer(&addslonczewskitorque2_args.arg_meshThickness)
	addslonczewskitorque2_args.argptr[27] = unsafe.Pointer(&addslonczewskitorque2_args.arg_freeLayerPosition)
	addslonczewskitorque2_args.argptr[28] = unsafe.Pointer(&addslonczewskitorque2_args.arg_N)
}

// Wrapper for addslonczewskitorque2 OpenCL kernel, asynchronous.
func k_addslonczewskitorque2_async(tx unsafe.Pointer, ty unsafe.Pointer, tz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Ms_ unsafe.Pointer, Ms_mul float32, jz_ unsafe.Pointer, jz_mul float32, px_ unsafe.Pointer, px_mul float32, py_ unsafe.Pointer, py_mul float32, pz_ unsafe.Pointer, pz_mul float32, alpha_ unsafe.Pointer, alpha_mul float32, pol_ unsafe.Pointer, pol_mul float32, lambda_ unsafe.Pointer, lambda_mul float32, epsPrime_ unsafe.Pointer, epsPrime_mul float32, thickness_ unsafe.Pointer, thickness_mul float32, meshThickness float32, freeLayerPosition float32, N int, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("addslonczewskitorque2")
	}

	addslonczewskitorque2_args.Lock()
	defer addslonczewskitorque2_args.Unlock()

	addslonczewskitorque2_args.arg_tx = tx
	addslonczewskitorque2_args.arg_ty = ty
	addslonczewskitorque2_args.arg_tz = tz
	addslonczewskitorque2_args.arg_mx = mx
	addslonczewskitorque2_args.arg_my = my
	addslonczewskitorque2_args.arg_mz = mz
	addslonczewskitorque2_args.arg_Ms_ = Ms_
	addslonczewskitorque2_args.arg_Ms_mul = Ms_mul
	addslonczewskitorque2_args.arg_jz_ = jz_
	addslonczewskitorque2_args.arg_jz_mul = jz_mul
	addslonczewskitorque2_args.arg_px_ = px_
	addslonczewskitorque2_args.arg_px_mul = px_mul
	addslonczewskitorque2_args.arg_py_ = py_
	addslonczewskitorque2_args.arg_py_mul = py_mul
	addslonczewskitorque2_args.arg_pz_ = pz_
	addslonczewskitorque2_args.arg_pz_mul = pz_mul
	addslonczewskitorque2_args.arg_alpha_ = alpha_
	addslonczewskitorque2_args.arg_alpha_mul = alpha_mul
	addslonczewskitorque2_args.arg_pol_ = pol_
	addslonczewskitorque2_args.arg_pol_mul = pol_mul
	addslonczewskitorque2_args.arg_lambda_ = lambda_
	addslonczewskitorque2_args.arg_lambda_mul = lambda_mul
	addslonczewskitorque2_args.arg_epsPrime_ = epsPrime_
	addslonczewskitorque2_args.arg_epsPrime_mul = epsPrime_mul
	addslonczewskitorque2_args.arg_thickness_ = thickness_
	addslonczewskitorque2_args.arg_thickness_mul = thickness_mul
	addslonczewskitorque2_args.arg_meshThickness = meshThickness
	addslonczewskitorque2_args.arg_freeLayerPosition = freeLayerPosition
	addslonczewskitorque2_args.arg_N = N

	SetKernelArgWrapper("addslonczewskitorque2", 0, tx)
	SetKernelArgWrapper("addslonczewskitorque2", 1, ty)
	SetKernelArgWrapper("addslonczewskitorque2", 2, tz)
	SetKernelArgWrapper("addslonczewskitorque2", 3, mx)
	SetKernelArgWrapper("addslonczewskitorque2", 4, my)
	SetKernelArgWrapper("addslonczewskitorque2", 5, mz)
	SetKernelArgWrapper("addslonczewskitorque2", 6, Ms_)
	SetKernelArgWrapper("addslonczewskitorque2", 7, Ms_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 8, jz_)
	SetKernelArgWrapper("addslonczewskitorque2", 9, jz_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 10, px_)
	SetKernelArgWrapper("addslonczewskitorque2", 11, px_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 12, py_)
	SetKernelArgWrapper("addslonczewskitorque2", 13, py_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 14, pz_)
	SetKernelArgWrapper("addslonczewskitorque2", 15, pz_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 16, alpha_)
	SetKernelArgWrapper("addslonczewskitorque2", 17, alpha_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 18, pol_)
	SetKernelArgWrapper("addslonczewskitorque2", 19, pol_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 20, lambda_)
	SetKernelArgWrapper("addslonczewskitorque2", 21, lambda_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 22, epsPrime_)
	SetKernelArgWrapper("addslonczewskitorque2", 23, epsPrime_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 24, thickness_)
	SetKernelArgWrapper("addslonczewskitorque2", 25, thickness_mul)
	SetKernelArgWrapper("addslonczewskitorque2", 26, meshThickness)
	SetKernelArgWrapper("addslonczewskitorque2", 27, freeLayerPosition)
	SetKernelArgWrapper("addslonczewskitorque2", 28, N)

	//	args := addslonczewskitorque2_args.argptr[:]
	event := LaunchKernel("addslonczewskitorque2", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("addslonczewskitorque2")
	}

	return event
}
