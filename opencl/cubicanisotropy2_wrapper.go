package opencl

/*
 THIS FILE IS AUTO-GENERATED BY OCL2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/seeder-research/uMagNUS/cl"
	"github.com/seeder-research/uMagNUS/timer"
	"sync"
	"unsafe"
)

// Stores the arguments for addcubicanisotropy2 kernel invocation
type addcubicanisotropy2_args_t struct {
	arg_Bx      unsafe.Pointer
	arg_By      unsafe.Pointer
	arg_Bz      unsafe.Pointer
	arg_mx      unsafe.Pointer
	arg_my      unsafe.Pointer
	arg_mz      unsafe.Pointer
	arg_Ms_     unsafe.Pointer
	arg_Ms_mul  float32
	arg_k1_     unsafe.Pointer
	arg_k1_mul  float32
	arg_k2_     unsafe.Pointer
	arg_k2_mul  float32
	arg_k3_     unsafe.Pointer
	arg_k3_mul  float32
	arg_c1x_    unsafe.Pointer
	arg_c1x_mul float32
	arg_c1y_    unsafe.Pointer
	arg_c1y_mul float32
	arg_c1z_    unsafe.Pointer
	arg_c1z_mul float32
	arg_c2x_    unsafe.Pointer
	arg_c2x_mul float32
	arg_c2y_    unsafe.Pointer
	arg_c2y_mul float32
	arg_c2z_    unsafe.Pointer
	arg_c2z_mul float32
	arg_N       int
	argptr      [27]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for addcubicanisotropy2 kernel invocation
var addcubicanisotropy2_args addcubicanisotropy2_args_t

func init() {
	// OpenCL driver kernel call wants pointers to arguments, set them up once.
	addcubicanisotropy2_args.argptr[0] = unsafe.Pointer(&addcubicanisotropy2_args.arg_Bx)
	addcubicanisotropy2_args.argptr[1] = unsafe.Pointer(&addcubicanisotropy2_args.arg_By)
	addcubicanisotropy2_args.argptr[2] = unsafe.Pointer(&addcubicanisotropy2_args.arg_Bz)
	addcubicanisotropy2_args.argptr[3] = unsafe.Pointer(&addcubicanisotropy2_args.arg_mx)
	addcubicanisotropy2_args.argptr[4] = unsafe.Pointer(&addcubicanisotropy2_args.arg_my)
	addcubicanisotropy2_args.argptr[5] = unsafe.Pointer(&addcubicanisotropy2_args.arg_mz)
	addcubicanisotropy2_args.argptr[6] = unsafe.Pointer(&addcubicanisotropy2_args.arg_Ms_)
	addcubicanisotropy2_args.argptr[7] = unsafe.Pointer(&addcubicanisotropy2_args.arg_Ms_mul)
	addcubicanisotropy2_args.argptr[8] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k1_)
	addcubicanisotropy2_args.argptr[9] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k1_mul)
	addcubicanisotropy2_args.argptr[10] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k2_)
	addcubicanisotropy2_args.argptr[11] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k2_mul)
	addcubicanisotropy2_args.argptr[12] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k3_)
	addcubicanisotropy2_args.argptr[13] = unsafe.Pointer(&addcubicanisotropy2_args.arg_k3_mul)
	addcubicanisotropy2_args.argptr[14] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1x_)
	addcubicanisotropy2_args.argptr[15] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1x_mul)
	addcubicanisotropy2_args.argptr[16] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1y_)
	addcubicanisotropy2_args.argptr[17] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1y_mul)
	addcubicanisotropy2_args.argptr[18] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1z_)
	addcubicanisotropy2_args.argptr[19] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c1z_mul)
	addcubicanisotropy2_args.argptr[20] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2x_)
	addcubicanisotropy2_args.argptr[21] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2x_mul)
	addcubicanisotropy2_args.argptr[22] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2y_)
	addcubicanisotropy2_args.argptr[23] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2y_mul)
	addcubicanisotropy2_args.argptr[24] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2z_)
	addcubicanisotropy2_args.argptr[25] = unsafe.Pointer(&addcubicanisotropy2_args.arg_c2z_mul)
	addcubicanisotropy2_args.argptr[26] = unsafe.Pointer(&addcubicanisotropy2_args.arg_N)
}

// Wrapper for addcubicanisotropy2 OpenCL kernel, asynchronous.
func k_addcubicanisotropy2_async(Bx unsafe.Pointer, By unsafe.Pointer, Bz unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Ms_ unsafe.Pointer, Ms_mul float32, k1_ unsafe.Pointer, k1_mul float32, k2_ unsafe.Pointer, k2_mul float32, k3_ unsafe.Pointer, k3_mul float32, c1x_ unsafe.Pointer, c1x_mul float32, c1y_ unsafe.Pointer, c1y_mul float32, c1z_ unsafe.Pointer, c1z_mul float32, c2x_ unsafe.Pointer, c2x_mul float32, c2y_ unsafe.Pointer, c2y_mul float32, c2z_ unsafe.Pointer, c2z_mul float32, N int, cfg *config, events []*cl.Event, launchQueue *cl.CommandQueue) *cl.Event {
	if Synchronous { // debug
		launchQueue.Finish()
		timer.Start("addcubicanisotropy2")
	}

	addcubicanisotropy2_args.Lock()
	defer addcubicanisotropy2_args.Unlock()

	addcubicanisotropy2_args.arg_Bx = Bx
	addcubicanisotropy2_args.arg_By = By
	addcubicanisotropy2_args.arg_Bz = Bz
	addcubicanisotropy2_args.arg_mx = mx
	addcubicanisotropy2_args.arg_my = my
	addcubicanisotropy2_args.arg_mz = mz
	addcubicanisotropy2_args.arg_Ms_ = Ms_
	addcubicanisotropy2_args.arg_Ms_mul = Ms_mul
	addcubicanisotropy2_args.arg_k1_ = k1_
	addcubicanisotropy2_args.arg_k1_mul = k1_mul
	addcubicanisotropy2_args.arg_k2_ = k2_
	addcubicanisotropy2_args.arg_k2_mul = k2_mul
	addcubicanisotropy2_args.arg_k3_ = k3_
	addcubicanisotropy2_args.arg_k3_mul = k3_mul
	addcubicanisotropy2_args.arg_c1x_ = c1x_
	addcubicanisotropy2_args.arg_c1x_mul = c1x_mul
	addcubicanisotropy2_args.arg_c1y_ = c1y_
	addcubicanisotropy2_args.arg_c1y_mul = c1y_mul
	addcubicanisotropy2_args.arg_c1z_ = c1z_
	addcubicanisotropy2_args.arg_c1z_mul = c1z_mul
	addcubicanisotropy2_args.arg_c2x_ = c2x_
	addcubicanisotropy2_args.arg_c2x_mul = c2x_mul
	addcubicanisotropy2_args.arg_c2y_ = c2y_
	addcubicanisotropy2_args.arg_c2y_mul = c2y_mul
	addcubicanisotropy2_args.arg_c2z_ = c2z_
	addcubicanisotropy2_args.arg_c2z_mul = c2z_mul
	addcubicanisotropy2_args.arg_N = N

	SetKernelArgWrapper("addcubicanisotropy2", 0, Bx)
	SetKernelArgWrapper("addcubicanisotropy2", 1, By)
	SetKernelArgWrapper("addcubicanisotropy2", 2, Bz)
	SetKernelArgWrapper("addcubicanisotropy2", 3, mx)
	SetKernelArgWrapper("addcubicanisotropy2", 4, my)
	SetKernelArgWrapper("addcubicanisotropy2", 5, mz)
	SetKernelArgWrapper("addcubicanisotropy2", 6, Ms_)
	SetKernelArgWrapper("addcubicanisotropy2", 7, Ms_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 8, k1_)
	SetKernelArgWrapper("addcubicanisotropy2", 9, k1_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 10, k2_)
	SetKernelArgWrapper("addcubicanisotropy2", 11, k2_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 12, k3_)
	SetKernelArgWrapper("addcubicanisotropy2", 13, k3_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 14, c1x_)
	SetKernelArgWrapper("addcubicanisotropy2", 15, c1x_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 16, c1y_)
	SetKernelArgWrapper("addcubicanisotropy2", 17, c1y_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 18, c1z_)
	SetKernelArgWrapper("addcubicanisotropy2", 19, c1z_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 20, c2x_)
	SetKernelArgWrapper("addcubicanisotropy2", 21, c2x_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 22, c2y_)
	SetKernelArgWrapper("addcubicanisotropy2", 23, c2y_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 24, c2z_)
	SetKernelArgWrapper("addcubicanisotropy2", 25, c2z_mul)
	SetKernelArgWrapper("addcubicanisotropy2", 26, N)

	//	args := addcubicanisotropy2_args.argptr[:]
	event := LaunchKernel("addcubicanisotropy2", cfg.Grid, cfg.Block, launchQueue, events)

	if Synchronous { // debug
		launchQueue.Finish()
		timer.Stop("addcubicanisotropy2")
	}

	return event
}
